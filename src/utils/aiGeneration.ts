import axios from "axios";
import { Question } from "./ocr";

export const generateQuestionsFromAI = async (
  existingQuestions: Question[],
  subjectName: string,
  count: number = 5
): Promise<Question[]> => {
  // Call backend API to generate questions using Gemini
  const response = await axios.post("/api/papers/generate-questions", {
    subject: subjectName,
    count,
    existingQuestions,
  });
  return response.data.questions;
};

export const generateSamplePaper = async (
  existingQuestions: Question[],
  subjectName: string,
  paperTitle: string = "Sample Examination Paper"
): Promise<{
  title: string;
  description: string;
  questions: Question[];
  totalMarks: number;
  estimatedTime: number;
  createdAt: string;
}> => {
  // Use backend for real sample paper generation
  const questions = await generateQuestionsFromAI(existingQuestions, subjectName, 10);
  const totalMarks = questions.reduce((sum, q) => sum + (q.marks || 0), 0);
  const estimatedTime = Math.round(totalMarks * 1.5);
  return {
    title: paperTitle,
    description: `This sample paper was generated by Gemini AI based on previous ${subjectName} exams.`,
    questions,
    totalMarks,
    estimatedTime,
    createdAt: new Date().toISOString(),
  };
};
